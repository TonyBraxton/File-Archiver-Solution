<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="3/9/2025 8:51:10 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-BK8EF5JA"
  DTS:CreatorName="LAPTOP-BK8EF5JA\OWNER"
  DTS:DTSID="{995C19AF-36A1-4DEC-9FAE-0D6886F7A3C5}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="4105"
  DTS:ObjectName="Bayer Package"
  DTS:PackageType="5"
  DTS:VersionBuild="90"
  DTS:VersionGUID="{533E6A69-8B6B-43F3-BFFA-F09165871E46}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Z:\]"
      DTS:CreationName="FILE"
      DTS:DTSID="{C1EE1F25-C202-4008-8946-353241B17D44}"
      DTS:ObjectName="Z:\">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:FileUsageType="2"
          DTS:ConnectionString="Z:\" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{399D67C4-746E-4692-B9AF-D341E9EE8748}"
      DTS:ObjectName="NetworkDrivePath">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">Z:\BAYER</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task clientB"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{2A5C46CE-07F9-488C-A3F6-35EFD3C76824}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task clientB"
      DTS:ThreadHint="0">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:DTSID="{7560BBA5-5F85-476B-8BE6-D4ADD8A56BA6}"
          DTS:IncludeInDebugDump="2345"
          DTS:Namespace="User"
          DTS:ObjectName="NetworkDrivePath_clientB">
          <DTS:VariableValue
            DTS:DataType="8">Z:\BAYER</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_03ba6d15246643cf9671a3b0edd3409d"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::NetworkDrivePath_clientB">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_03ba6d15246643cf9671a3b0edd3409d.Properties.Settings.get_Default():ST_03ba6d15246643cf9671a3b0edd3409d.Properties.Sett" +
    "ings")]

namespace ST_03ba6d15246643cf9671a3b0edd3409d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_03ba6d15246643cf9671a3b0edd3409d.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A98AB12F-7433-440F-AD36-D957FC34DF09}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_03ba6d15246643cf9671a3b0edd3409d</RootNamespace>
    <AssemblyName>ST_03ba6d15246643cf9671a3b0edd3409d</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using static System.Net.WebRequestMethods;
using File = System.IO.File;
using System.Globalization;
using System.Text.RegularExpressions;
#endregion

namespace ST_03ba6d15246643cf9671a3b0edd3409d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string srcFolderPath_clientB; //@"D:\Files";
            string destFolderPath_clientB;
            string filePath;
            string fileName;
            string networkDrivePath_clientB = Dts.Variables["User::NetworkDrivePath_clientB"].Value.ToString(); ;


            string[] files_clientB;

            string fileDate="";

            srcFolderPath_clientB = @"C:paste the source folder for this client's files from your device";
            
            files_clientB = Directory.GetFiles(srcFolderPath_clientB);

            // Initialize array of FileInfo objects to hold file info
            FileInfo[] filesInfoBayer = new FileInfo[files_clientB.Length];

            // Get file info for each file in the source folder
            for (int i = 0; i < files_clientB.Length; i++)
            {
                filesInfoBayer[i] = new FileInfo(files_clientB[i]);
            }
            //get file info for each file srcFolderBayer
            //foreach file in filesInfoBayer array create a directory after it's filedate and copy it to that directory then delete original
            foreach (FileInfo file in filesInfoBayer)
            {
                filePath = file.FullName;                

                fileName = file.Name;//fullpath=src path + file name

                fileDate = GetDate(fileName);

                destFolderPath_clientB = networkDrivePath_clientB;//assign path to destfolder

                destFolderPath_clientB = Path.Combine(destFolderPath_clientB, fileDate);//create a directory with the file date

                if (!Directory.Exists(destFolderPath_clientB))
                {
                    Directory.CreateDirectory(destFolderPath_clientB);//create directory with destfolderpath
                }

                destFolderPath_clientB = Path.Combine(destFolderPath_clientB, fileName);

                //If statement below accounts for the case where the file already exists in the destination folder
                //(might be as a result of duplicates in source folder) if staement ensures src folder regardless will be emptied
                if (!File.Exists(destFolderPath_clientB))
                {
                    File.Copy(filePath, destFolderPath_clientB);//copy source file to destfolderpath
                }
                else//if source file already exists in destfolderpath replace it by:
                {
                    File.Delete(destFolderPath_clientB);//delete existing file at destFolder
                    File.Copy(filePath, destFolderPath_clientB);//copy source replace recently deleted file in destfolderpath with source file 
                }
                File.Delete(filePath);//we ensure source file is deleted after the transfer



            }

            Dts.TaskResult = (int)ScriptResults.Success;

		}
        public string GetDate(string name)
        {
            string date="";
            Match match = Regex.Match(name, @"\d{4}_?\d{2}_?\d{2}");//Match 4digits then 2 digits then 2 digits  _?(to account for underscore in Telus files dates
            string matchedDate = match.Value;//set date to the match value
            if (!string.IsNullOrEmpty(matchedDate))
            {
                matchedDate = matchedDate.Replace("_", "");
                var extractedDate = DateTime.ParseExact(matchedDate, "yyyyMMdd", CultureInfo.CurrentCulture);//format date
                date = extractedDate.ToString("yyyy-MM-dd");
            }
            return date;
        }
        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion


	}

}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_03ba6d15246643cf9671a3b0edd3409d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_03ba6d15246643cf9671a3b0edd3409d</msb:DisplayName>
    <msb:ProjectId>{E6DFEA8B-C38E-40C0-9218-6CC89D54BDE7}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_03ba6d15246643cf9671a3b0edd3409d.csproj" />
    <msb:File Include="ScriptMain.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_03ba6d15246643cf9671a3b0edd3409d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("ST_03ba6d15246643cf9671a3b0edd3409d")]
[assembly: AssemblyCopyright("Copyright @ HP 2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_03ba6d15246643cf9671a3b0edd3409d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_03ba6d15246643cf9671a3b0edd3409d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_03ba6d15246643cf9671a3b0edd3409d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_03ba6d15246643cf9671a3b0edd3409d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_03ba6d15246643cf9671a3b0edd3409d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_03ba6d15246643cf9671a3b0edd3409d.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAMO+6GcAAAAAAAAAAOAAIiALATAAABIAAAAIAAAAAAAA+jEA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAKgxAABPAAAAAEAAAIAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAABIAAAAgAAAAEgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIAEAAAAQAAAAAYAAAAUAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAGgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADc
MQAAAAAAAEgAAAACAAUACCIAAOgOAAABAAAAAAAAAPAwAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwBADlAAAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoNcj8AAHATBXJBAABwKBUAAAoTBBEEjmmNDwAAARMGFhMHKxURBhEHEQQRB5pzFgAA
CqIRBxdYEwcRBxEEjmky4xEGEwgWEwkrZxEIEQmaJW8XAAAKC28YAAAKDAIIKAIAAAYTBQkKBhEF
KBkAAAoKBigaAAAKLQcGKBsAAAomBggoGQAACgoGKBwAAAotCQcGKB0AAAorDQYoHgAACgcGKB0A
AAoHKB4AAAoRCRdYEwkRCREIjmkykQIoEAAAChZvHwAACioAAAATMAMAUAAAAAIAABFyPwAAcAoD
csgAAHAoIAAACm8hAAAKCwcoIgAACi0vB3LwAABwcj8AAHBvIwAACgsHcvQAAHAoJAAACiglAAAK
DBICcgYBAHAoJgAACgoGKh4CKCcAAAoqHgIoKAAACiqufgEAAAQtHnIcAQBw0AMAAAIoKQAACm8q
AAAKcysAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigsAAAKKi5zCQAABoAD
AAAEKgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAiAQAACN+AAD0BAAAjAYA
ACNTdHJpbmdzAAAAAIALAACQAQAAI1VTABANAAAQAAAAI0dVSUQAAAAgDQAAyAEAACNCbG9iAAAA
AAAAAAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACoAAAAFAAAABgAAAAoAAAACAAAALAAAAAIAAAAQ
AAAAAgAAAAIAAAADAAAABAAAAAEAAAAEAAAAAQAAAAEAAAAAAO0DAQAAAAAABgCSAgUFBgAhAwUF
BgDeAeAEDwB5BQAABgALAmsEBgB1AmsEBgBWAmsEBgAIA2sEBgCyAmsEBgDLAmsEBgAiAmsEBgA9
Ak8DCgDmApwDCgBOAZwDBgB9BAoADgDzBC0GBgCtAAoABgDNAB4EBgAlBB4EBgDBAeAEBgAmBh4E
BgDDBCUFBgCGBFYEDgCKAdcDDgDyAdcDDgBqAUEEBgCmAQUFCgDFA5wDEgC7BdYAEgCAANYABgBx
BgoABgCSBAoABgB4AwoABgChBAoADgBTBtcFDgByA9cFDgBGAdcFBgBrAx4EBgCvBB4EBgD+AB4E
BgCJAB4EBgBdBmsEAAAAAAEAAAAAAAEAAQABABAANgREADkAAQABAAAAEAAsBYgFVQABAAQAAAEQ
AM4FiAVpAAMACAADAQAABgYAAE0ABAALABEAKgTEABEAIwHIABEAcADMAAYGMwDQAFaA9gXTAFaA
AwHTAFAgAAAAAIYAPAQGAAEARCEAAAAAhgCCAYwAAQCgIQAAAACGGNMEBgACAKghAAAAAIMY0wQG
AAIAsCEAAAAAkwi/BNcAAgDcIQAAAACTCAsBfQACAOMhAAAAAJMIFwHcAAIA6yEAAAAAlgg4BuIA
AwDyIQAAAACGGNMEBgADAPohAAAAAJEY2QTnAAMAAAABAMgAAAABAEkDCQDTBAEAEQDTBAYAGQDT
BAoAKQDTBBAAMQDTBBAAOQDTBBAAQQDTBBAASQDTBBAAUQDTBBAAWQDTBBAAYQDTBBAAaQDTBAYA
oQDTBAYAyQDTBBUA2QDTBAYAcQD+BS0A4QC3BTIA6QAVBDcA8QA/Az0AqQBpA0EA+QDFBUUAeQDT
BBAAAQG7AEEAAQGyAEEACQH2AEsA+QAUBlEA+QBrBlYAiQAUBlEAiQBmBl0AiQCfAWMA4QBEBgEA
GQFyA28AKQE/A0EAMQF7BlEAMQFoAHcAuQAzAX0AkQAbBoIAkQBpA4wAcQDTBAYAqQDTBAYAQQGb
AJEAQQFZBpoAsQDTBKAA0QDTBAYACAAUALoACAAYAL8AKQBzACIBLgALAPoALgATAAMBLgAbACIB
LgAjACsBLgArAFQBLgAzAFQBLgA7AFoBLgBDACsBLgBLAGIBLgBTAFQBLgBbAHsBQwBjAL8ASQBz
ACIBYQB7AL8AYwBrAL8AGwBoAAMAAQAEAAMAAADDBOsAAAA+AfAAAAA8BvUAAgAFAAMAAgAGAAUA
AQAHAAUAAgAIAAcABIAAAAEAAAADJEGnAAAAAAAARAAAAAQAAAAAAAAAAAAAAKgAOwAAAAAAEAAA
AAAAAAAAAAAAsQB9AwAAAAAEAAAAAAAAAAAAAACoAB4EAAAAABAAAAAAAAAAAAAAALEAFAAAAAAA
AAAAAAEAAAA2BQAABQACAAAAAAAAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAG1zY29ybGliAFNUXzAzYmE2ZDE1MjQ2NjQzY2Y5NjcxYTNi
MGVkZDM0MDlkAFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAFZhcmlhYmxlAFJ1bnRpbWVUeXBlSGFu
ZGxlAEdldFR5cGVGcm9tSGFuZGxlAEZpbGUAZ2V0X05hbWUAZ2V0X0Z1bGxOYW1lAG5hbWUARGF0
ZVRpbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBDb21iaW5lAFR5cGUARmFpbHVy
ZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0N1cnJlbnRDdWx0
dXJlAENhcHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEFwcGxpY2F0aW9uU2V0dGlu
Z3NCYXNlAEdldERhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUARGVsZXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRf
VmFsdWUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNYXRjaABQYXRo
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5U
YXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21wb25lbnRNb2RlbABT
VF8wM2JhNmQxNTI0NjY0M2NmOTY3MWEzYjBlZGQzNDA5ZC5kbGwAZ2V0X0l0ZW0AU3lzdGVtAEVu
dW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xv
YmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBGaWxlSW5mbwBDdWx0dXJlSW5mbwBGaWxlU3lz
dGVtSW5mbwBEaXJlY3RvcnlJbmZvAElGb3JtYXRQcm92aWRlcgBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAV2ViUmVxdWVzdE1ldGhvZHMAU3lzdGVt
LlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzAzYmE2ZDE1MjQ2
NjQzY2Y5NjcxYTNiMGVkZDM0MDlkLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1
Z2dpbmdNb2RlcwBTVF8wM2JhNmQxNTI0NjY0M2NmOTY3MWEzYjBlZGQzNDA5ZC5Qcm9wZXJ0aWVz
AGdldF9WYXJpYWJsZXMAR2V0RmlsZXMAU2V0dGluZ3MAU3lzdGVtLlRleHQuUmVndWxhckV4cHJl
c3Npb25zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAEV4aXN0cwBQYXJzZUV4YWN0AE9i
amVjdABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFJlZ2V4AGdldF9Bc3Nl
bWJseQBDb3B5AENyZWF0ZURpcmVjdG9yeQBJc051bGxPckVtcHR5AAAAAAA9VQBzAGUAcgA6ADoA
TgBlAHQAdwBvAHIAawBEAHIAaQB2AGUAUABhAHQAaABfAGMAbABpAGUAbgB0AEIAAAEAgIVDADoA
cABhAHMAdABlACAAdABoAGUAIABzAG8AdQByAGMAZQAgAGYAbwBsAGQAZQByACAAZgBvAHIAIAB0
AGgAaQBzACAAYwBsAGkAZQBuAHQAJwBzACAAZgBpAGwAZQBzACAAZgByAG8AbQAgAHkAbwB1AHIA
IABkAGUAdgBpAGMAZQABJ1wAZAB7ADQAfQBfAD8AXABkAHsAMgB9AF8APwBcAGQAewAyAH0AAANf
AAAReQB5AHkAeQBNAE0AZABkAAAVeQB5AHkAeQAtAE0ATQAtAGQAZAABcVMAVABfADAAMwBiAGEA
NgBkADEANQAyADQANgA2ADQAMwBjAGYAOQA2ADcAMQBhADMAYgAwAGUAZABkADMANAAwADkAZAAu
AFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAAACAQ4ltZ7DMR6CJO1Hc
FPigAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFhEQcKDg4ODh0ODh0SPQgdEj0IBCAAEnEEIAAS
dQUgARJ5HAMgABwDIAAOBQABHQ4OBQACDg4OBAABAg4GAAESgIkOBQACAQ4OBAABAQ4GBwMODhFJ
BwACEoCRDg4FIAIODg4EAAASXQkAAxFJDg4SgJ0EIAEODggAARKAoRGApQUgABKAqQcgAgEOEoCp
CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAEAQAAAAMGElkDBhJdAwYSEAIGCAMGERQEAAASWQUAAQES
XQQAABIQAwAAAQQIABJZBAgAEl0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU1RfMDNiYTZkMTUyNDY2NDNjZjk2NzFhM2IwZWRkMzQwOWQA
AAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjUAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
AAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nv
cmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3
N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAA
AAAAAABQQURQQURQtAAAANAxAAAAAAAAAAAAAOoxAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAADc
MQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAA
AAAAAAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAA
AEgAAABYQAAAIgQAAAAAAAAAAAAAIgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8A
AAAAAL0E7/4AAAEAAAABAEGnAyQAAAEAQacDJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABE
AAAAAQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8A
bgAAAAAAAACwBIIDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAF4DAAABADAAMAAw
ADAAMAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEA
bgB5AE4AYQBtAGUAAAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBv
AG4AAAAAAFMAVABfADAAMwBiAGEANgBkADEANQAyADQANgA2ADQAMwBjAGYAOQA2ADcAMQBhADMA
YgAwAGUAZABkADMANAAwADkAZAAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAu
ADAALgA5ADIAMQA5AC4ANAAyADgAMQA3AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0A
ZQAAAFMAVABfADAAMwBiAGEANgBkADEANQAyADQANgA2ADQAMwBjAGYAOQA2ADcAMQBhADMAYgAw
AGUAZABkADMANAAwADkAZAAuAGQAbABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcA
aAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAASABQACAAMgAwADIANQAAACoAAQABAEwAZQBn
AGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYA
aQBsAGUAbgBhAG0AZQAAAFMAVABfADAAMwBiAGEANgBkADEANQAyADQANgA2ADQAMwBjAGYAOQA2
ADcAMQBhADMAYgAwAGUAZABkADMANAAwADkAZAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMA
dABOAGEAbQBlAAAAAABTAFQAXwAwADMAYgBhADYAZAAxADUAMgA0ADYANgA0ADMAYwBmADkANgA3
ADEAYQAzAGIAMABlAGQAZAAzADQAMAA5AGQAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADkAMgAxADkALgA0ADIAOAAxADcAAAAAAEYADwABAEEAcwBzAGUAbQBi
AGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADkAMgAxADkALgA0ADIAOAAxADcAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAPwxAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="164.8,41.6"
          Id="Package\Script Task clientB"
          TopLeft="465.499974866708,147.633332344956" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>